{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","changePressed","e","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAKaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAdlC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,iBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,2CAC8BT,WAvBtC,GAAyBU,a,MCAzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.3917bb83.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.changePressed);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.changePressed);\n  }\n\n  changePressed = (e: KeyboardEvent) => {\n    this.setState({ pressedKey: e.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {`The last pressed key is ${pressedKey}`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}